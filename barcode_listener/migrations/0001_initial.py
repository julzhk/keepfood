# Generated by Django 2.2 on 2019-04-24 21:31

import django.db.models.deletion
import taggit.managers
from django.db import migrations, models

import barcode_listener.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='ControlStack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upcnumber', models.CharField(blank=True, max_length=32)),
                ('created_at', models.DateTimeField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'ControlStack',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=128)),
                ('description', models.CharField(blank=True, max_length=128)),
                ('upcnumber', models.CharField(blank=True, max_length=128)),
                ('data_source', models.CharField(blank=True, default='Placeholder', max_length=128)),
                ('created_at', models.DateTimeField(blank=True)),
                ('modified_at', models.DateTimeField(blank=True)),
            ],
            options={
                'ordering': ['-modified_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_use_by', models.DateTimeField(blank=True)),
                ('date_started', models.DateTimeField(blank=True, null=True)),
                ('quantity_remaining', models.IntegerField(default=100)),
                ('created_at', models.DateTimeField(blank=True)),
                ('modified_at', models.DateTimeField(blank=True)),
                ('product',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barcode_listener.Product')),
            ],
            options={
                'verbose_name_plural': 'Stock',
                'ordering': ['-modified_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaggedStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barcode_listener.Stock')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                          related_name='barcode_listener_taggedstock_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, barcode_listener.models.CommonTags),
        ),
        migrations.CreateModel(
            name='TaggedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barcode_listener.Product')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                          related_name='barcode_listener_taggedproduct_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, barcode_listener.models.CommonTags),
        ),
        migrations.AddField(
            model_name='stock',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.',
                                                  through='barcode_listener.TaggedStock', to='taggit.Tag',
                                                  verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.',
                                                  through='barcode_listener.TaggedProduct', to='taggit.Tag',
                                                  verbose_name='Tags'),
        ),
    ]
